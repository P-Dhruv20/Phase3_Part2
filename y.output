Terminals unused in grammar

   TRUE
   FALSE


State 54 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Function Program
    2        | %empty

    3 $@1: %empty

    4 $@2: %empty

    5 $@3: %empty

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    7 Dec_colon: Declaration SEMICOLON Dec_colon
    8          | %empty

    9 Declaration: IDENT COLON Array INTEGER

   10 Array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF
   11      | %empty

   12 $@4: %empty

   13 $@5: %empty

   14 Statement: Var $@4 ASSIGN Expression SEMICOLON $@5 Statement1

   15 $@6: %empty

   16 $@7: %empty

   17 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN Var ADD Var $@6 SEMICOLON $@7 Statement1

   18 $@8: %empty

   19 $@9: %empty

   20 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN NUMBER $@8 SEMICOLON $@9 Statement1

   21 $@10: %empty

   22 $@11: %empty

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON $@11 Statement1
   24          | IF Bool_Exp THEN Statement Else_statement ENDIF SEMICOLON Statement1
   25          | WHILE Bool_Exp BEGINLOOP Statement ENDLOOP SEMICOLON Statement1
   26          | DO BEGINLOOP Statement ENDLOOP WHILE Bool_Exp SEMICOLON Statement1

   27 $@12: %empty

   28 $@13: %empty

   29 Statement: READ Var $@12 SEMICOLON $@13 Statement1

   30 $@14: %empty

   31 $@15: %empty

   32 Statement: WRITE Var $@14 SEMICOLON $@15 Statement1

   33 $@16: %empty

   34 $@17: %empty

   35 Statement: READ IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET $@16 SEMICOLON $@17 Statement1

   36 $@18: %empty

   37 $@19: %empty

   38 Statement: WRITE IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET $@18 SEMICOLON $@19 Statement1

   39 $@20: %empty

   40 Statement: CONTINUE SEMICOLON $@20 Statement1

   41 $@21: %empty

   42 Statement: BREAK SEMICOLON $@21 Statement1

   43 $@22: %empty

   44 Statement: RETURN Expression SEMICOLON $@22 Statement1

   45 Statement1: Statement
   46           | %empty

   47 Else_statement: ELSE Statement
   48               | %empty

   49 Bool_Exp: Not Expression Comp Expression

   50 Not: NOT
   51    | %empty

   52 Comp: EQ
   53     | NEQ
   54     | LT
   55     | GT
   56     | LTE
   57     | GTE
   58     | %empty

   59 Expression: Multi_Exp Add_Op

   60 $@23: %empty

   61 Add_Op: ADD $@23 Expression

   62 $@24: %empty

   63 Add_Op: MINUS $@24 Expression
   64       | %empty

   65 Multi_Exp: Term Mult_Op

   66 $@25: %empty

   67 Mult_Op: MULT $@25 Multi_Exp

   68 $@26: %empty

   69 Mult_Op: DIV $@26 Multi_Exp

   70 $@27: %empty

   71 Mult_Op: MOD $@27 Multi_Exp
   72        | %empty

   73 Term: Var
   74     | Var_arr
   75     | NUMBER

   76 $@28: %empty

   77 $@29: %empty

   78 Term: L_PAREN $@28 Expression $@29 R_PAREN
   79     | IDENT L_PAREN Term_Exp R_PAREN

   80 Term_Exp: Expression

   81 $@30: %empty

   82 Term_Exp: Expression COMMA $@30 Term_Exp
   83         | %empty

   84 Var: IDENT

   85 Var_arr: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 10 17 20 23 35 38 75
IDENT (259) 6 9 17 20 23 35 38 79 84 85
FUNCTION (260) 6
BEGIN_PARAMS (261) 6
END_PARAMS (262) 6
BEGIN_LOCALS (263) 6
END_LOCALS (264) 6
BEGIN_BODY (265) 6
END_BODY (266) 6
INTEGER (267) 9
ARRAY (268) 10
OF (269) 10
IF (270) 24
THEN (271) 24
ENDIF (272) 24
ELSE (273) 47
WHILE (274) 25 26
DO (275) 26
BEGINLOOP (276) 25 26
ENDLOOP (277) 25 26
CONTINUE (278) 40
BREAK (279) 42
READ (280) 29 35
WRITE (281) 32 38
NOT (282) 50
TRUE (283)
FALSE (284)
RETURN (285) 44
MINUS (286) 63
ADD (287) 17 23 61
MULT (288) 23 67
DIV (289) 69
MOD (290) 71
EQ (291) 52
NEQ (292) 53
LT (293) 54
GT (294) 55
LTE (295) 56
GTE (296) 57
SEMICOLON (297) 6 7 14 17 20 23 24 25 26 29 32 35 38 40 42 44
COLON (298) 9
COMMA (299) 82
L_PAREN (300) 23 78 79
R_PAREN (301) 23 78 79
L_SQUARE_BRACKET (302) 10 17 20 23 35 38 85
R_SQUARE_BRACKET (303) 10 17 20 23 35 38 85
ASSIGN (304) 14 17 20 23


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
Program (51)
    on left: 1 2, on right: 0 1
Function (52)
    on left: 6, on right: 1
$@1 (53)
    on left: 3, on right: 6
$@2 (54)
    on left: 4, on right: 6
$@3 (55)
    on left: 5, on right: 6
Dec_colon (56)
    on left: 7 8, on right: 6 7
Declaration (57)
    on left: 9, on right: 7
Array (58)
    on left: 10 11, on right: 9
Statement (59)
    on left: 14 17 20 23 24 25 26 29 32 35 38 40 42 44, on right: 6
    24 25 26 45 47
$@4 (60)
    on left: 12, on right: 14
$@5 (61)
    on left: 13, on right: 14
$@6 (62)
    on left: 15, on right: 17
$@7 (63)
    on left: 16, on right: 17
$@8 (64)
    on left: 18, on right: 20
$@9 (65)
    on left: 19, on right: 20
$@10 (66)
    on left: 21, on right: 23
$@11 (67)
    on left: 22, on right: 23
$@12 (68)
    on left: 27, on right: 29
$@13 (69)
    on left: 28, on right: 29
$@14 (70)
    on left: 30, on right: 32
$@15 (71)
    on left: 31, on right: 32
$@16 (72)
    on left: 33, on right: 35
$@17 (73)
    on left: 34, on right: 35
$@18 (74)
    on left: 36, on right: 38
$@19 (75)
    on left: 37, on right: 38
$@20 (76)
    on left: 39, on right: 40
$@21 (77)
    on left: 41, on right: 42
$@22 (78)
    on left: 43, on right: 44
Statement1 (79)
    on left: 45 46, on right: 14 17 20 23 24 25 26 29 32 35 38 40 42
    44
Else_statement (80)
    on left: 47 48, on right: 24
Bool_Exp (81)
    on left: 49, on right: 24 25 26
Not (82)
    on left: 50 51, on right: 49
Comp (83)
    on left: 52 53 54 55 56 57 58, on right: 49
Expression (84)
    on left: 59, on right: 14 44 49 61 63 78 80 82 85
Add_Op (85)
    on left: 61 63 64, on right: 59
$@23 (86)
    on left: 60, on right: 61
$@24 (87)
    on left: 62, on right: 63
Multi_Exp (88)
    on left: 65, on right: 59 67 69 71
Mult_Op (89)
    on left: 67 69 71 72, on right: 65
$@25 (90)
    on left: 66, on right: 67
$@26 (91)
    on left: 68, on right: 69
$@27 (92)
    on left: 70, on right: 71
Term (93)
    on left: 73 74 75 78 79, on right: 65
$@28 (94)
    on left: 76, on right: 78
$@29 (95)
    on left: 77, on right: 78
Term_Exp (96)
    on left: 80 82 83, on right: 79 82
$@30 (97)
    on left: 81, on right: 82
Var (98)
    on left: 84, on right: 14 17 23 29 32 73
Var_arr (99)
    on left: 85, on right: 74


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program   go to state 2
    Function  go to state 3


State 1

    6 Function: FUNCTION . IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    IDENT  shift, and go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

    1 Program: Function . Program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program   go to state 6
    Function  go to state 3


State 4

    6 Function: FUNCTION IDENT . $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    $default  reduce using rule 3 ($@1)

    $@1  go to state 7


State 5

    0 $accept: Program $end .

    $default  accept


State 6

    1 Program: Function Program .

    $default  reduce using rule 1 (Program)


State 7

    6 Function: FUNCTION IDENT $@1 . SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    SEMICOLON  shift, and go to state 8


State 8

    6 Function: FUNCTION IDENT $@1 SEMICOLON . BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS . Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 8 (Dec_colon)

    Dec_colon    go to state 11
    Declaration  go to state 12


State 10

    9 Declaration: IDENT . COLON Array INTEGER

    COLON  shift, and go to state 13


State 11

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon . $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    $default  reduce using rule 4 ($@2)

    $@2  go to state 14


State 12

    7 Dec_colon: Declaration . SEMICOLON Dec_colon

    SEMICOLON  shift, and go to state 15


State 13

    9 Declaration: IDENT COLON . Array INTEGER

    ARRAY  shift, and go to state 16

    $default  reduce using rule 11 (Array)

    Array  go to state 17


State 14

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 . END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    END_PARAMS  shift, and go to state 18


State 15

    7 Dec_colon: Declaration SEMICOLON . Dec_colon

    IDENT  shift, and go to state 10

    $default  reduce using rule 8 (Dec_colon)

    Dec_colon    go to state 19
    Declaration  go to state 12


State 16

   10 Array: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

    L_SQUARE_BRACKET  shift, and go to state 20


State 17

    9 Declaration: IDENT COLON Array . INTEGER

    INTEGER  shift, and go to state 21


State 18

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS . BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 19

    7 Dec_colon: Declaration SEMICOLON Dec_colon .

    $default  reduce using rule 7 (Dec_colon)


State 20

   10 Array: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF

    NUMBER  shift, and go to state 23


State 21

    9 Declaration: IDENT COLON Array INTEGER .

    $default  reduce using rule 9 (Declaration)


State 22

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS . Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 8 (Dec_colon)

    Dec_colon    go to state 24
    Declaration  go to state 12


State 23

   10 Array: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF

    R_SQUARE_BRACKET  shift, and go to state 25


State 24

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon . $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    $default  reduce using rule 5 ($@3)

    $@3  go to state 26


State 25

   10 Array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF

    OF  shift, and go to state 27


State 26

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 . END_LOCALS BEGIN_BODY Statement END_BODY

    END_LOCALS  shift, and go to state 28


State 27

   10 Array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF .

    $default  reduce using rule 10 (Array)


State 28

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS . BEGIN_BODY Statement END_BODY

    BEGIN_BODY  shift, and go to state 29


State 29

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY . Statement END_BODY

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Statement  go to state 39
    Var        go to state 40


State 30

   17 Statement: IDENT . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN Var ADD Var $@6 SEMICOLON $@7 Statement1
   20          | IDENT . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN NUMBER $@8 SEMICOLON $@9 Statement1
   23          | IDENT . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON $@11 Statement1
   84 Var: IDENT .

    L_SQUARE_BRACKET  shift, and go to state 41

    $default  reduce using rule 84 (Var)


State 31

   24 Statement: IF . Bool_Exp THEN Statement Else_statement ENDIF SEMICOLON Statement1

    NOT  shift, and go to state 42

    $default  reduce using rule 51 (Not)

    Bool_Exp  go to state 43
    Not       go to state 44


State 32

   25 Statement: WHILE . Bool_Exp BEGINLOOP Statement ENDLOOP SEMICOLON Statement1

    NOT  shift, and go to state 42

    $default  reduce using rule 51 (Not)

    Bool_Exp  go to state 45
    Not       go to state 44


State 33

   26 Statement: DO . BEGINLOOP Statement ENDLOOP WHILE Bool_Exp SEMICOLON Statement1

    BEGINLOOP  shift, and go to state 46


State 34

   40 Statement: CONTINUE . SEMICOLON $@20 Statement1

    SEMICOLON  shift, and go to state 47


State 35

   42 Statement: BREAK . SEMICOLON $@21 Statement1

    SEMICOLON  shift, and go to state 48


State 36

   29 Statement: READ . Var $@12 SEMICOLON $@13 Statement1
   35          | READ . IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET $@16 SEMICOLON $@17 Statement1

    IDENT  shift, and go to state 49

    Var  go to state 50


State 37

   32 Statement: WRITE . Var $@14 SEMICOLON $@15 Statement1
   38          | WRITE . IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET $@18 SEMICOLON $@19 Statement1

    IDENT  shift, and go to state 51

    Var  go to state 52


State 38

   44 Statement: RETURN . Expression SEMICOLON $@22 Statement1

    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 54
    L_PAREN  shift, and go to state 55

    Expression  go to state 56
    Multi_Exp   go to state 57
    Term        go to state 58
    Var         go to state 59
    Var_arr     go to state 60


State 39

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement . END_BODY

    END_BODY  shift, and go to state 61


State 40

   14 Statement: Var . $@4 ASSIGN Expression SEMICOLON $@5 Statement1

    $default  reduce using rule 12 ($@4)

    $@4  go to state 62


State 41

   17 Statement: IDENT L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET ASSIGN Var ADD Var $@6 SEMICOLON $@7 Statement1
   20          | IDENT L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET ASSIGN NUMBER $@8 SEMICOLON $@9 Statement1
   23          | IDENT L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON $@11 Statement1

    NUMBER  shift, and go to state 63


State 42

   50 Not: NOT .

    $default  reduce using rule 50 (Not)


State 43

   24 Statement: IF Bool_Exp . THEN Statement Else_statement ENDIF SEMICOLON Statement1

    THEN  shift, and go to state 64


State 44

   49 Bool_Exp: Not . Expression Comp Expression

    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 54
    L_PAREN  shift, and go to state 55

    Expression  go to state 65
    Multi_Exp   go to state 57
    Term        go to state 58
    Var         go to state 59
    Var_arr     go to state 60


State 45

   25 Statement: WHILE Bool_Exp . BEGINLOOP Statement ENDLOOP SEMICOLON Statement1

    BEGINLOOP  shift, and go to state 66


State 46

   26 Statement: DO BEGINLOOP . Statement ENDLOOP WHILE Bool_Exp SEMICOLON Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Statement  go to state 67
    Var        go to state 40


State 47

   40 Statement: CONTINUE SEMICOLON . $@20 Statement1

    $default  reduce using rule 39 ($@20)

    $@20  go to state 68


State 48

   42 Statement: BREAK SEMICOLON . $@21 Statement1

    $default  reduce using rule 41 ($@21)

    $@21  go to state 69


State 49

   35 Statement: READ IDENT . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET $@16 SEMICOLON $@17 Statement1
   84 Var: IDENT .

    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 84 (Var)


State 50

   29 Statement: READ Var . $@12 SEMICOLON $@13 Statement1

    $default  reduce using rule 27 ($@12)

    $@12  go to state 71


State 51

   38 Statement: WRITE IDENT . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET $@18 SEMICOLON $@19 Statement1
   84 Var: IDENT .

    L_SQUARE_BRACKET  shift, and go to state 72

    $default  reduce using rule 84 (Var)


State 52

   32 Statement: WRITE Var . $@14 SEMICOLON $@15 Statement1

    $default  reduce using rule 30 ($@14)

    $@14  go to state 73


State 53

   75 Term: NUMBER .

    $default  reduce using rule 75 (Term)


State 54

   79 Term: IDENT . L_PAREN Term_Exp R_PAREN
   84 Var: IDENT .
   85 Var_arr: IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 74
    L_SQUARE_BRACKET  shift, and go to state 75

    L_PAREN   [reduce using rule 84 (Var)]
    $default  reduce using rule 84 (Var)


State 55

   78 Term: L_PAREN . $@28 Expression $@29 R_PAREN

    $default  reduce using rule 76 ($@28)

    $@28  go to state 76


State 56

   44 Statement: RETURN Expression . SEMICOLON $@22 Statement1

    SEMICOLON  shift, and go to state 77


State 57

   59 Expression: Multi_Exp . Add_Op

    MINUS  shift, and go to state 78
    ADD    shift, and go to state 79

    $default  reduce using rule 64 (Add_Op)

    Add_Op  go to state 80


State 58

   65 Multi_Exp: Term . Mult_Op

    MULT  shift, and go to state 81
    DIV   shift, and go to state 82
    MOD   shift, and go to state 83

    $default  reduce using rule 72 (Mult_Op)

    Mult_Op  go to state 84


State 59

   73 Term: Var .

    $default  reduce using rule 73 (Term)


State 60

   74 Term: Var_arr .

    $default  reduce using rule 74 (Term)


State 61

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY .

    $default  reduce using rule 6 (Function)


State 62

   14 Statement: Var $@4 . ASSIGN Expression SEMICOLON $@5 Statement1

    ASSIGN  shift, and go to state 85


State 63

   17 Statement: IDENT L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET ASSIGN Var ADD Var $@6 SEMICOLON $@7 Statement1
   20          | IDENT L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET ASSIGN NUMBER $@8 SEMICOLON $@9 Statement1
   23          | IDENT L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON $@11 Statement1

    R_SQUARE_BRACKET  shift, and go to state 86


State 64

   24 Statement: IF Bool_Exp THEN . Statement Else_statement ENDIF SEMICOLON Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Statement  go to state 87
    Var        go to state 40


State 65

   49 Bool_Exp: Not Expression . Comp Expression

    EQ   shift, and go to state 88
    NEQ  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    LTE  shift, and go to state 92
    GTE  shift, and go to state 93

    $default  reduce using rule 58 (Comp)

    Comp  go to state 94


State 66

   25 Statement: WHILE Bool_Exp BEGINLOOP . Statement ENDLOOP SEMICOLON Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Statement  go to state 95
    Var        go to state 40


State 67

   26 Statement: DO BEGINLOOP Statement . ENDLOOP WHILE Bool_Exp SEMICOLON Statement1

    ENDLOOP  shift, and go to state 96


State 68

   40 Statement: CONTINUE SEMICOLON $@20 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 46 (Statement1)

    Statement   go to state 97
    Statement1  go to state 98
    Var         go to state 40


State 69

   42 Statement: BREAK SEMICOLON $@21 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 46 (Statement1)

    Statement   go to state 97
    Statement1  go to state 99
    Var         go to state 40


State 70

   35 Statement: READ IDENT L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET $@16 SEMICOLON $@17 Statement1

    NUMBER  shift, and go to state 100


State 71

   29 Statement: READ Var $@12 . SEMICOLON $@13 Statement1

    SEMICOLON  shift, and go to state 101


State 72

   38 Statement: WRITE IDENT L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET $@18 SEMICOLON $@19 Statement1

    NUMBER  shift, and go to state 102


State 73

   32 Statement: WRITE Var $@14 . SEMICOLON $@15 Statement1

    SEMICOLON  shift, and go to state 103


State 74

   79 Term: IDENT L_PAREN . Term_Exp R_PAREN

    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 54
    L_PAREN  shift, and go to state 55

    $default  reduce using rule 83 (Term_Exp)

    Expression  go to state 104
    Multi_Exp   go to state 57
    Term        go to state 58
    Term_Exp    go to state 105
    Var         go to state 59
    Var_arr     go to state 60


State 75

   85 Var_arr: IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 54
    L_PAREN  shift, and go to state 55

    Expression  go to state 106
    Multi_Exp   go to state 57
    Term        go to state 58
    Var         go to state 59
    Var_arr     go to state 60


State 76

   78 Term: L_PAREN $@28 . Expression $@29 R_PAREN

    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 54
    L_PAREN  shift, and go to state 55

    Expression  go to state 107
    Multi_Exp   go to state 57
    Term        go to state 58
    Var         go to state 59
    Var_arr     go to state 60


State 77

   44 Statement: RETURN Expression SEMICOLON . $@22 Statement1

    $default  reduce using rule 43 ($@22)

    $@22  go to state 108


State 78

   63 Add_Op: MINUS . $@24 Expression

    $default  reduce using rule 62 ($@24)

    $@24  go to state 109


State 79

   61 Add_Op: ADD . $@23 Expression

    $default  reduce using rule 60 ($@23)

    $@23  go to state 110


State 80

   59 Expression: Multi_Exp Add_Op .

    $default  reduce using rule 59 (Expression)


State 81

   67 Mult_Op: MULT . $@25 Multi_Exp

    $default  reduce using rule 66 ($@25)

    $@25  go to state 111


State 82

   69 Mult_Op: DIV . $@26 Multi_Exp

    $default  reduce using rule 68 ($@26)

    $@26  go to state 112


State 83

   71 Mult_Op: MOD . $@27 Multi_Exp

    $default  reduce using rule 70 ($@27)

    $@27  go to state 113


State 84

   65 Multi_Exp: Term Mult_Op .

    $default  reduce using rule 65 (Multi_Exp)


State 85

   14 Statement: Var $@4 ASSIGN . Expression SEMICOLON $@5 Statement1

    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 54
    L_PAREN  shift, and go to state 55

    Expression  go to state 114
    Multi_Exp   go to state 57
    Term        go to state 58
    Var         go to state 59
    Var_arr     go to state 60


State 86

   17 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . ASSIGN Var ADD Var $@6 SEMICOLON $@7 Statement1
   20          | IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . ASSIGN NUMBER $@8 SEMICOLON $@9 Statement1
   23          | IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON $@11 Statement1

    ASSIGN  shift, and go to state 115


State 87

   24 Statement: IF Bool_Exp THEN Statement . Else_statement ENDIF SEMICOLON Statement1

    ELSE  shift, and go to state 116

    $default  reduce using rule 48 (Else_statement)

    Else_statement  go to state 117


State 88

   52 Comp: EQ .

    $default  reduce using rule 52 (Comp)


State 89

   53 Comp: NEQ .

    $default  reduce using rule 53 (Comp)


State 90

   54 Comp: LT .

    $default  reduce using rule 54 (Comp)


State 91

   55 Comp: GT .

    $default  reduce using rule 55 (Comp)


State 92

   56 Comp: LTE .

    $default  reduce using rule 56 (Comp)


State 93

   57 Comp: GTE .

    $default  reduce using rule 57 (Comp)


State 94

   49 Bool_Exp: Not Expression Comp . Expression

    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 54
    L_PAREN  shift, and go to state 55

    Expression  go to state 118
    Multi_Exp   go to state 57
    Term        go to state 58
    Var         go to state 59
    Var_arr     go to state 60


State 95

   25 Statement: WHILE Bool_Exp BEGINLOOP Statement . ENDLOOP SEMICOLON Statement1

    ENDLOOP  shift, and go to state 119


State 96

   26 Statement: DO BEGINLOOP Statement ENDLOOP . WHILE Bool_Exp SEMICOLON Statement1

    WHILE  shift, and go to state 120


State 97

   45 Statement1: Statement .

    $default  reduce using rule 45 (Statement1)


State 98

   40 Statement: CONTINUE SEMICOLON $@20 Statement1 .

    $default  reduce using rule 40 (Statement)


State 99

   42 Statement: BREAK SEMICOLON $@21 Statement1 .

    $default  reduce using rule 42 (Statement)


State 100

   35 Statement: READ IDENT L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET $@16 SEMICOLON $@17 Statement1

    R_SQUARE_BRACKET  shift, and go to state 121


State 101

   29 Statement: READ Var $@12 SEMICOLON . $@13 Statement1

    $default  reduce using rule 28 ($@13)

    $@13  go to state 122


State 102

   38 Statement: WRITE IDENT L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET $@18 SEMICOLON $@19 Statement1

    R_SQUARE_BRACKET  shift, and go to state 123


State 103

   32 Statement: WRITE Var $@14 SEMICOLON . $@15 Statement1

    $default  reduce using rule 31 ($@15)

    $@15  go to state 124


State 104

   80 Term_Exp: Expression .
   82         | Expression . COMMA $@30 Term_Exp

    COMMA  shift, and go to state 125

    $default  reduce using rule 80 (Term_Exp)


State 105

   79 Term: IDENT L_PAREN Term_Exp . R_PAREN

    R_PAREN  shift, and go to state 126


State 106

   85 Var_arr: IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 127


State 107

   78 Term: L_PAREN $@28 Expression . $@29 R_PAREN

    $default  reduce using rule 77 ($@29)

    $@29  go to state 128


State 108

   44 Statement: RETURN Expression SEMICOLON $@22 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 46 (Statement1)

    Statement   go to state 97
    Statement1  go to state 129
    Var         go to state 40


State 109

   63 Add_Op: MINUS $@24 . Expression

    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 54
    L_PAREN  shift, and go to state 55

    Expression  go to state 130
    Multi_Exp   go to state 57
    Term        go to state 58
    Var         go to state 59
    Var_arr     go to state 60


State 110

   61 Add_Op: ADD $@23 . Expression

    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 54
    L_PAREN  shift, and go to state 55

    Expression  go to state 131
    Multi_Exp   go to state 57
    Term        go to state 58
    Var         go to state 59
    Var_arr     go to state 60


State 111

   67 Mult_Op: MULT $@25 . Multi_Exp

    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 54
    L_PAREN  shift, and go to state 55

    Multi_Exp  go to state 132
    Term       go to state 58
    Var        go to state 59
    Var_arr    go to state 60


State 112

   69 Mult_Op: DIV $@26 . Multi_Exp

    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 54
    L_PAREN  shift, and go to state 55

    Multi_Exp  go to state 133
    Term       go to state 58
    Var        go to state 59
    Var_arr    go to state 60


State 113

   71 Mult_Op: MOD $@27 . Multi_Exp

    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 54
    L_PAREN  shift, and go to state 55

    Multi_Exp  go to state 134
    Term       go to state 58
    Var        go to state 59
    Var_arr    go to state 60


State 114

   14 Statement: Var $@4 ASSIGN Expression . SEMICOLON $@5 Statement1

    SEMICOLON  shift, and go to state 135


State 115

   17 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN . Var ADD Var $@6 SEMICOLON $@7 Statement1
   20          | IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN . NUMBER $@8 SEMICOLON $@9 Statement1
   23          | IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN . IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON $@11 Statement1

    NUMBER  shift, and go to state 136
    IDENT   shift, and go to state 137

    Var  go to state 138


State 116

   47 Else_statement: ELSE . Statement

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Statement  go to state 139
    Var        go to state 40


State 117

   24 Statement: IF Bool_Exp THEN Statement Else_statement . ENDIF SEMICOLON Statement1

    ENDIF  shift, and go to state 140


State 118

   49 Bool_Exp: Not Expression Comp Expression .

    $default  reduce using rule 49 (Bool_Exp)


State 119

   25 Statement: WHILE Bool_Exp BEGINLOOP Statement ENDLOOP . SEMICOLON Statement1

    SEMICOLON  shift, and go to state 141


State 120

   26 Statement: DO BEGINLOOP Statement ENDLOOP WHILE . Bool_Exp SEMICOLON Statement1

    NOT  shift, and go to state 42

    $default  reduce using rule 51 (Not)

    Bool_Exp  go to state 142
    Not       go to state 44


State 121

   35 Statement: READ IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . $@16 SEMICOLON $@17 Statement1

    $default  reduce using rule 33 ($@16)

    $@16  go to state 143


State 122

   29 Statement: READ Var $@12 SEMICOLON $@13 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 46 (Statement1)

    Statement   go to state 97
    Statement1  go to state 144
    Var         go to state 40


State 123

   38 Statement: WRITE IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . $@18 SEMICOLON $@19 Statement1

    $default  reduce using rule 36 ($@18)

    $@18  go to state 145


State 124

   32 Statement: WRITE Var $@14 SEMICOLON $@15 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 46 (Statement1)

    Statement   go to state 97
    Statement1  go to state 146
    Var         go to state 40


State 125

   82 Term_Exp: Expression COMMA . $@30 Term_Exp

    $default  reduce using rule 81 ($@30)

    $@30  go to state 147


State 126

   79 Term: IDENT L_PAREN Term_Exp R_PAREN .

    $default  reduce using rule 79 (Term)


State 127

   85 Var_arr: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 85 (Var_arr)


State 128

   78 Term: L_PAREN $@28 Expression $@29 . R_PAREN

    R_PAREN  shift, and go to state 148


State 129

   44 Statement: RETURN Expression SEMICOLON $@22 Statement1 .

    $default  reduce using rule 44 (Statement)


State 130

   63 Add_Op: MINUS $@24 Expression .

    $default  reduce using rule 63 (Add_Op)


State 131

   61 Add_Op: ADD $@23 Expression .

    $default  reduce using rule 61 (Add_Op)


State 132

   67 Mult_Op: MULT $@25 Multi_Exp .

    $default  reduce using rule 67 (Mult_Op)


State 133

   69 Mult_Op: DIV $@26 Multi_Exp .

    $default  reduce using rule 69 (Mult_Op)


State 134

   71 Mult_Op: MOD $@27 Multi_Exp .

    $default  reduce using rule 71 (Mult_Op)


State 135

   14 Statement: Var $@4 ASSIGN Expression SEMICOLON . $@5 Statement1

    $default  reduce using rule 13 ($@5)

    $@5  go to state 149


State 136

   20 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN NUMBER . $@8 SEMICOLON $@9 Statement1

    $default  reduce using rule 18 ($@8)

    $@8  go to state 150


State 137

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON $@11 Statement1
   84 Var: IDENT .

    L_SQUARE_BRACKET  shift, and go to state 151

    $default  reduce using rule 84 (Var)


State 138

   17 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN Var . ADD Var $@6 SEMICOLON $@7 Statement1

    ADD  shift, and go to state 152


State 139

   47 Else_statement: ELSE Statement .

    $default  reduce using rule 47 (Else_statement)


State 140

   24 Statement: IF Bool_Exp THEN Statement Else_statement ENDIF . SEMICOLON Statement1

    SEMICOLON  shift, and go to state 153


State 141

   25 Statement: WHILE Bool_Exp BEGINLOOP Statement ENDLOOP SEMICOLON . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 46 (Statement1)

    Statement   go to state 97
    Statement1  go to state 154
    Var         go to state 40


State 142

   26 Statement: DO BEGINLOOP Statement ENDLOOP WHILE Bool_Exp . SEMICOLON Statement1

    SEMICOLON  shift, and go to state 155


State 143

   35 Statement: READ IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET $@16 . SEMICOLON $@17 Statement1

    SEMICOLON  shift, and go to state 156


State 144

   29 Statement: READ Var $@12 SEMICOLON $@13 Statement1 .

    $default  reduce using rule 29 (Statement)


State 145

   38 Statement: WRITE IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET $@18 . SEMICOLON $@19 Statement1

    SEMICOLON  shift, and go to state 157


State 146

   32 Statement: WRITE Var $@14 SEMICOLON $@15 Statement1 .

    $default  reduce using rule 32 (Statement)


State 147

   82 Term_Exp: Expression COMMA $@30 . Term_Exp

    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 54
    L_PAREN  shift, and go to state 55

    $default  reduce using rule 83 (Term_Exp)

    Expression  go to state 104
    Multi_Exp   go to state 57
    Term        go to state 58
    Term_Exp    go to state 158
    Var         go to state 59
    Var_arr     go to state 60


State 148

   78 Term: L_PAREN $@28 Expression $@29 R_PAREN .

    $default  reduce using rule 78 (Term)


State 149

   14 Statement: Var $@4 ASSIGN Expression SEMICOLON $@5 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 46 (Statement1)

    Statement   go to state 97
    Statement1  go to state 159
    Var         go to state 40


State 150

   20 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN NUMBER $@8 . SEMICOLON $@9 Statement1

    SEMICOLON  shift, and go to state 160


State 151

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON $@11 Statement1

    NUMBER  shift, and go to state 161


State 152

   17 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN Var ADD . Var $@6 SEMICOLON $@7 Statement1

    IDENT  shift, and go to state 162

    Var  go to state 163


State 153

   24 Statement: IF Bool_Exp THEN Statement Else_statement ENDIF SEMICOLON . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 46 (Statement1)

    Statement   go to state 97
    Statement1  go to state 164
    Var         go to state 40


State 154

   25 Statement: WHILE Bool_Exp BEGINLOOP Statement ENDLOOP SEMICOLON Statement1 .

    $default  reduce using rule 25 (Statement)


State 155

   26 Statement: DO BEGINLOOP Statement ENDLOOP WHILE Bool_Exp SEMICOLON . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 46 (Statement1)

    Statement   go to state 97
    Statement1  go to state 165
    Var         go to state 40


State 156

   35 Statement: READ IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET $@16 SEMICOLON . $@17 Statement1

    $default  reduce using rule 34 ($@17)

    $@17  go to state 166


State 157

   38 Statement: WRITE IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET $@18 SEMICOLON . $@19 Statement1

    $default  reduce using rule 37 ($@19)

    $@19  go to state 167


State 158

   82 Term_Exp: Expression COMMA $@30 Term_Exp .

    $default  reduce using rule 82 (Term_Exp)


State 159

   14 Statement: Var $@4 ASSIGN Expression SEMICOLON $@5 Statement1 .

    $default  reduce using rule 14 (Statement)


State 160

   20 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN NUMBER $@8 SEMICOLON . $@9 Statement1

    $default  reduce using rule 19 ($@9)

    $@9  go to state 168


State 161

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON $@11 Statement1

    R_SQUARE_BRACKET  shift, and go to state 169


State 162

   84 Var: IDENT .

    $default  reduce using rule 84 (Var)


State 163

   17 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN Var ADD Var . $@6 SEMICOLON $@7 Statement1

    $default  reduce using rule 15 ($@6)

    $@6  go to state 170


State 164

   24 Statement: IF Bool_Exp THEN Statement Else_statement ENDIF SEMICOLON Statement1 .

    $default  reduce using rule 24 (Statement)


State 165

   26 Statement: DO BEGINLOOP Statement ENDLOOP WHILE Bool_Exp SEMICOLON Statement1 .

    $default  reduce using rule 26 (Statement)


State 166

   35 Statement: READ IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET $@16 SEMICOLON $@17 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 46 (Statement1)

    Statement   go to state 97
    Statement1  go to state 171
    Var         go to state 40


State 167

   38 Statement: WRITE IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET $@18 SEMICOLON $@19 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 46 (Statement1)

    Statement   go to state 97
    Statement1  go to state 172
    Var         go to state 40


State 168

   20 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN NUMBER $@8 SEMICOLON $@9 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 46 (Statement1)

    Statement   go to state 97
    Statement1  go to state 173
    Var         go to state 40


State 169

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON $@11 Statement1

    MULT  shift, and go to state 174


State 170

   17 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN Var ADD Var $@6 . SEMICOLON $@7 Statement1

    SEMICOLON  shift, and go to state 175


State 171

   35 Statement: READ IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET $@16 SEMICOLON $@17 Statement1 .

    $default  reduce using rule 35 (Statement)


State 172

   38 Statement: WRITE IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET $@18 SEMICOLON $@19 Statement1 .

    $default  reduce using rule 38 (Statement)


State 173

   20 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN NUMBER $@8 SEMICOLON $@9 Statement1 .

    $default  reduce using rule 20 (Statement)


State 174

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT . L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON $@11 Statement1

    L_PAREN  shift, and go to state 176


State 175

   17 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN Var ADD Var $@6 SEMICOLON . $@7 Statement1

    $default  reduce using rule 16 ($@7)

    $@7  go to state 177


State 176

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN . IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON $@11 Statement1

    IDENT  shift, and go to state 178


State 177

   17 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN Var ADD Var $@6 SEMICOLON $@7 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 46 (Statement1)

    Statement   go to state 97
    Statement1  go to state 179
    Var         go to state 40


State 178

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON $@11 Statement1

    L_SQUARE_BRACKET  shift, and go to state 180


State 179

   17 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN Var ADD Var $@6 SEMICOLON $@7 Statement1 .

    $default  reduce using rule 17 (Statement)


State 180

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON $@11 Statement1

    NUMBER  shift, and go to state 181


State 181

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON $@11 Statement1

    R_SQUARE_BRACKET  shift, and go to state 182


State 182

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . ADD Var R_PAREN $@10 SEMICOLON $@11 Statement1

    ADD  shift, and go to state 183


State 183

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD . Var R_PAREN $@10 SEMICOLON $@11 Statement1

    IDENT  shift, and go to state 162

    Var  go to state 184


State 184

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var . R_PAREN $@10 SEMICOLON $@11 Statement1

    R_PAREN  shift, and go to state 185


State 185

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN . $@10 SEMICOLON $@11 Statement1

    $default  reduce using rule 21 ($@10)

    $@10  go to state 186


State 186

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 . SEMICOLON $@11 Statement1

    SEMICOLON  shift, and go to state 187


State 187

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON . $@11 Statement1

    $default  reduce using rule 22 ($@11)

    $@11  go to state 188


State 188

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON $@11 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 46 (Statement1)

    Statement   go to state 97
    Statement1  go to state 189
    Var         go to state 40


State 189

   23 Statement: IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ASSIGN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET MULT L_PAREN IDENT L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET ADD Var R_PAREN $@10 SEMICOLON $@11 Statement1 .

    $default  reduce using rule 23 (Statement)
